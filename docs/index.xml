<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>alvise.xyz</title>
    <link>https://www.alvise.xyz/</link>
    <description>Recent content on alvise.xyz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.alvise.xyz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>InSpectre Gadget:</title>
      <link>https://www.alvise.xyz/publications/inspectre-gadget/</link>
      <pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://www.alvise.xyz/publications/inspectre-gadget/</guid>
      <description></description>
    </item>
    <item>
      <title>Dynamic Linking Infographic</title>
      <link>https://www.alvise.xyz/sketches/dynamic-linking/</link>
      <pubDate>Sat, 14 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://www.alvise.xyz/sketches/dynamic-linking/</guid>
      <description>What happens when your code calls &lt;code&gt;printf()&lt;/code&gt;? And what&amp;rsquo;s up with all that &lt;code&gt;.got.plt&lt;/code&gt; stuff that you see when you decompile a binary? Here are some sketches I drew to help me remember this kind of stuff.</description>
    </item>
    <item>
      <title>CANflict: Hacking The CAN Bus, Without the CAN Bus</title>
      <link>https://www.alvise.xyz/posts/can-polyglots/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://www.alvise.xyz/posts/can-polyglots/</guid>
      <description>Some months ago, I wrote a Twitter thread about a bunch of CAN bus hacking shenanigans I was doing for my master thesis (which got retweeted by the awesome @angealbertini - senpai noticed me! ðŸ¥º).&#xA;You know what @angealbertini does with file formats, right? Well, we did the same thing with communications protocols - because, why not?</description>
    </item>
    <item>
      <title>CANflict:</title>
      <link>https://www.alvise.xyz/publications/canflict/</link>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://www.alvise.xyz/publications/canflict/</guid>
      <description></description>
    </item>
    <item>
      <title>Explainable AI: What the Hell is Even That?</title>
      <link>https://www.alvise.xyz/posts/explainable-ai-problems/</link>
      <pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://www.alvise.xyz/posts/explainable-ai-problems/</guid>
      <description>Machine Learning Memes for Convolutional Teens&#xA;Some time ago I wrote a (non-technical) short essay on AI explanation for a uni course. I didn&amp;rsquo;t know anything about the topic at the time (and things haven&amp;rsquo;t changed much since then) but it already seemed quite clear that the problem of explanation would become a huge one as AI research advanced.</description>
    </item>
    <item>
      <title>Writing Software For a Sounding Rocket: My Experience in a Student Rocketry Team</title>
      <link>https://www.alvise.xyz/posts/writing-software-for-a-sounding-rocket/</link>
      <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://www.alvise.xyz/posts/writing-software-for-a-sounding-rocket/</guid>
      <description>This year is going to be 5 years since I first joined Skyward Experimental Rocketry, and - oh boy, it has been a hell of a ride! We&amp;rsquo;ve just open-sourced the on-board software of our latest rocket, so I figured it would be cool to write a high-level introduction to the magical world of sounding rockets, from a software perspective.</description>
    </item>
    <item>
      <title>About</title>
      <link>https://www.alvise.xyz/about/</link>
      <pubDate>Thu, 06 Jan 2022 19:21:40 +0000</pubDate>
      <guid>https://www.alvise.xyz/about/</guid>
      <description>Hi there! I&amp;rsquo;m Alvise, a (former) software engineer with an embedded systems background and (now) PhD student at the Vrije University of Amsterdam in the VUSec group.&#xA;I&amp;rsquo;m interested in microarchitectural attacks, embedded &amp;amp; hardware security, program analysis, and anything at interface between hardware and software. I also like music, audiovisual arts, and sometimes humans too.</description>
    </item>
    <item>
      <title>PHANTOM TRAILS:</title>
      <link>https://www.alvise.xyz/publications/phantom-trails/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.alvise.xyz/publications/phantom-trails/</guid>
      <description></description>
    </item>
    <item>
      <title>Some (Web) Assembly Required: An Introduction to WASM Reversing</title>
      <link>https://www.alvise.xyz/posts/picoctf-some-assembly-required/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.alvise.xyz/posts/picoctf-some-assembly-required/</guid>
      <description>I&amp;rsquo;ve been looking at some old picoCTF challenges lately, this is my solution for one of them. It&amp;rsquo;s a gentle introduction to decompilation and reversing, but with a spinkle of Web Assembly on top.</description>
    </item>
  </channel>
</rss>
